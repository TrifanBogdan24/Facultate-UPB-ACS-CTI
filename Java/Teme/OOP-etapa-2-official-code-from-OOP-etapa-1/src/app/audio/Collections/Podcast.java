package app.audio.Collections;

import app.audio.Files.AudioFile;
import app.audio.Files.Episode;
import lombok.Getter;

import java.util.ArrayList;
import java.util.List;

@Getter
public final class Podcast extends AudioCollection {
    private final List<Episode> episodes;


    /**
     *
     * @param name          the name of the podcast
     * @param owner         the name of the user who owns / created the podcast
     * @param episodes      podcast's episodes
     */
    public Podcast(final String name, final String owner, final List<Episode> episodes) {
        super(name, owner);
        this.episodes = episodes;
    }


    public List<Episode> getEpisodes() {
        return episodes;
    }

    @Override
    public int getNumberOfTracks() {
        return episodes.size();
    }

    @Override
    public AudioFile getTrackByIndex(final int index) {
        return episodes.get(index);
    }

    /**
     *
     * @return      the formated text String of all podcasts episodes for the
     *              message generated by printCurrentPageCommand
     */
    public ArrayList<String> getEpisodesForHostPage() {
        ArrayList<String> names = new ArrayList<>();

        for (Episode episode: this.episodes) {
            names.add(episode.getName() + " - " + episode.getDescription());
        }

        return names;
    }

    /**
     *
     * @return      an ArrayList with all Episode names of the podcast
     */
    public ArrayList<String> getEpisodesNames() {
        ArrayList<String> names = new ArrayList<>();

        for (Episode episode: this.episodes) {
            names.add(episode.getName());
        }

        return names;
    }

    /**
     *
     * @return  true if the podcast is there is at least one episode that appears multiple times
     *          false if the podcast contains unique episodes
     */
    public boolean containsDoubleEpisodes() {
        int len = this.getEpisodes().size();

        for (int i = 0; i <= len - 2; i++) {
            for (int j = i + 1; j <= len - 1; j++) {
                Episode episode1 = this.getEpisodes().get(i);
                Episode episode2 = this.getEpisodes().get(j);

                String name1 = episode1.getName();
                String name2 = episode2.getName();

                if (name1.equals(name2)) {
                    return true;
                }
            }
        }

        return false;
    }
}
