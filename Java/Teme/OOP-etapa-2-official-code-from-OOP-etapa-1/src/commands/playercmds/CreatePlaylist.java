package commands.playercmds;

import app.SingletonAdmin;
import app.audio.Playlist;
import app.user.User;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import commands.CommandRunner;
import fileio.input.CommandInput;

import java.util.ArrayList;

public final class CreatePlaylist implements CommandRunner {

    public CreatePlaylist() {

    }

    /**
     * CreatePlaylist object node
     *
     * @param commandInput      the input command from the input/test* files
     * @return                  the ouput command, on object node that will be written
     *                          in the files of the result/ directory
     */
    @Override
    public ObjectNode execute(final CommandInput commandInput) {
        String message = createPlaylistMessage(commandInput);

        ObjectMapper objectMapper = new ObjectMapper();
        ObjectNode objectNode = objectMapper.createObjectNode();
        objectNode.put("command", commandInput.getCommand());
        objectNode.put("user", commandInput.getUsername());
        objectNode.put("timestamp", commandInput.getTimestamp());
        objectNode.put("message", message);

        return objectNode;
    }

    /**
     * CreatePlaylist message
     *
     * @param commandInput       from the input/test* files
     * @return                   the message generated by the execution of the input command
     */
    private static String createPlaylistMessage(final CommandInput commandInput) {
        String username = commandInput.getUsername();

        SingletonAdmin admin = SingletonAdmin.getInstance();
        User user = admin.getUserByName(username);
        admin.setCurrentUser(user);


        if (user == null) {
            return "The username " + username + " doesn't exist.";
        }

        user.setTimestampLastPlayedFile(null);

        if (!user.isOnline()) {
            return username + " is offline.";
        }

        ArrayList<Playlist> playlists = user.getPlaylists();
        String name = commandInput.getPlaylistName();
        int timestamp = commandInput.getTimestamp();

        if (playlists.stream().anyMatch(playlist -> playlist.getName().equals(name))) {
            return "A playlist with the same name already exists.";
        }

        playlists.add(new Playlist(name, user.getUsername(), timestamp));
        user.setPlaylists(playlists);

        return "Playlist created successfully.";
    }
}
